Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    WHILE
    PRINT
    NUMBER

Grammar

Rule 0     S' -> programme
Rule 1     programme -> statement
Rule 2     programme -> statement ; programme
Rule 3     statement -> for
Rule 4     statement -> load
Rule 5     statement -> save
Rule 6     statement -> matrix3
Rule 7     statement -> matrix4
Rule 8     statement -> transform
Rule 9     statement -> display
Rule 10    statement -> if
Rule 11    load -> LOAD_SRC expression FILE
Rule 12    save -> SAVE_DEST expression FILE
Rule 13    for -> FOR expression IN expression
Rule 14    matrix3 -> matrix3_assign
Rule 15    matrix3_assign -> MATRIX3 IDENTIFIER EGAL MATRIX3FORM
Rule 16    matrix4 -> matrix4_assign
Rule 17    matrix4_assign -> MATRIX4 IDENTIFIER EGAL MATRIX4FORM
Rule 18    transform -> TRANSFORM expression expression
Rule 19    display -> DISPLAY FILE
Rule 20    display -> DISPLAY expression
Rule 21    if_assign -> IF EXTENSION expression COMPARE expression
Rule 22    if -> if_assign
Rule 23    expression -> IDENTIFIER

Terminals, with rules where they appear

;                    : 2
COMPARE              : 21
DISPLAY              : 19 20
EGAL                 : 15 17
EXTENSION            : 21
FILE                 : 11 12 19
FOR                  : 13
IDENTIFIER           : 15 17 23
IF                   : 21
IN                   : 13
LOAD_SRC             : 11
MATRIX3              : 15
MATRIX3FORM          : 15
MATRIX4              : 17
MATRIX4FORM          : 17
NUMBER               : 
PRINT                : 
SAVE_DEST            : 12
TRANSFORM            : 18
WHILE                : 
error                : 

Nonterminals, with rules where they appear

display              : 9
expression           : 11 12 13 13 18 18 20 21 21
for                  : 3
if                   : 10
if_assign            : 22
load                 : 4
matrix3              : 6
matrix3_assign       : 14
matrix4              : 7
matrix4_assign       : 16
programme            : 2 0
save                 : 5
statement            : 1 2
transform            : 8

Parsing method: LALR

state 0

    (0) S' -> . programme
    (1) programme -> . statement
    (2) programme -> . statement ; programme
    (3) statement -> . for
    (4) statement -> . load
    (5) statement -> . save
    (6) statement -> . matrix3
    (7) statement -> . matrix4
    (8) statement -> . transform
    (9) statement -> . display
    (10) statement -> . if
    (13) for -> . FOR expression IN expression
    (11) load -> . LOAD_SRC expression FILE
    (12) save -> . SAVE_DEST expression FILE
    (14) matrix3 -> . matrix3_assign
    (16) matrix4 -> . matrix4_assign
    (18) transform -> . TRANSFORM expression expression
    (19) display -> . DISPLAY FILE
    (20) display -> . DISPLAY expression
    (22) if -> . if_assign
    (15) matrix3_assign -> . MATRIX3 IDENTIFIER EGAL MATRIX3FORM
    (17) matrix4_assign -> . MATRIX4 IDENTIFIER EGAL MATRIX4FORM
    (21) if_assign -> . IF EXTENSION expression COMPARE expression

    FOR             shift and go to state 5
    LOAD_SRC        shift and go to state 12
    SAVE_DEST       shift and go to state 16
    TRANSFORM       shift and go to state 4
    DISPLAY         shift and go to state 10
    MATRIX3         shift and go to state 14
    MATRIX4         shift and go to state 13
    IF              shift and go to state 7

    programme                      shift and go to state 1
    save                           shift and go to state 11
    if_assign                      shift and go to state 6
    transform                      shift and go to state 15
    for                            shift and go to state 3
    matrix4                        shift and go to state 17
    matrix4_assign                 shift and go to state 18
    statement                      shift and go to state 8
    matrix3                        shift and go to state 2
    load                           shift and go to state 9
    if                             shift and go to state 20
    display                        shift and go to state 19
    matrix3_assign                 shift and go to state 21

state 1

    (0) S' -> programme .



state 2

    (6) statement -> matrix3 .

    ;               reduce using rule 6 (statement -> matrix3 .)
    $end            reduce using rule 6 (statement -> matrix3 .)


state 3

    (3) statement -> for .

    ;               reduce using rule 3 (statement -> for .)
    $end            reduce using rule 3 (statement -> for .)


state 4

    (18) transform -> TRANSFORM . expression expression
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 22

state 5

    (13) for -> FOR . expression IN expression
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 24

state 6

    (22) if -> if_assign .

    ;               reduce using rule 22 (if -> if_assign .)
    $end            reduce using rule 22 (if -> if_assign .)


state 7

    (21) if_assign -> IF . EXTENSION expression COMPARE expression

    EXTENSION       shift and go to state 25


state 8

    (1) programme -> statement .
    (2) programme -> statement . ; programme

    $end            reduce using rule 1 (programme -> statement .)
    ;               shift and go to state 26


state 9

    (4) statement -> load .

    ;               reduce using rule 4 (statement -> load .)
    $end            reduce using rule 4 (statement -> load .)


state 10

    (19) display -> DISPLAY . FILE
    (20) display -> DISPLAY . expression
    (23) expression -> . IDENTIFIER

    FILE            shift and go to state 27
    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 28

state 11

    (5) statement -> save .

    ;               reduce using rule 5 (statement -> save .)
    $end            reduce using rule 5 (statement -> save .)


state 12

    (11) load -> LOAD_SRC . expression FILE
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 29

state 13

    (17) matrix4_assign -> MATRIX4 . IDENTIFIER EGAL MATRIX4FORM

    IDENTIFIER      shift and go to state 30


state 14

    (15) matrix3_assign -> MATRIX3 . IDENTIFIER EGAL MATRIX3FORM

    IDENTIFIER      shift and go to state 31


state 15

    (8) statement -> transform .

    ;               reduce using rule 8 (statement -> transform .)
    $end            reduce using rule 8 (statement -> transform .)


state 16

    (12) save -> SAVE_DEST . expression FILE
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 32

state 17

    (7) statement -> matrix4 .

    ;               reduce using rule 7 (statement -> matrix4 .)
    $end            reduce using rule 7 (statement -> matrix4 .)


state 18

    (16) matrix4 -> matrix4_assign .

    ;               reduce using rule 16 (matrix4 -> matrix4_assign .)
    $end            reduce using rule 16 (matrix4 -> matrix4_assign .)


state 19

    (9) statement -> display .

    ;               reduce using rule 9 (statement -> display .)
    $end            reduce using rule 9 (statement -> display .)


state 20

    (10) statement -> if .

    ;               reduce using rule 10 (statement -> if .)
    $end            reduce using rule 10 (statement -> if .)


state 21

    (14) matrix3 -> matrix3_assign .

    ;               reduce using rule 14 (matrix3 -> matrix3_assign .)
    $end            reduce using rule 14 (matrix3 -> matrix3_assign .)


state 22

    (18) transform -> TRANSFORM expression . expression
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 33

state 23

    (23) expression -> IDENTIFIER .

    ;               reduce using rule 23 (expression -> IDENTIFIER .)
    $end            reduce using rule 23 (expression -> IDENTIFIER .)
    COMPARE         reduce using rule 23 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (expression -> IDENTIFIER .)
    FILE            reduce using rule 23 (expression -> IDENTIFIER .)
    IN              reduce using rule 23 (expression -> IDENTIFIER .)


state 24

    (13) for -> FOR expression . IN expression

    IN              shift and go to state 34


state 25

    (21) if_assign -> IF EXTENSION . expression COMPARE expression
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 35

state 26

    (2) programme -> statement ; . programme
    (1) programme -> . statement
    (2) programme -> . statement ; programme
    (3) statement -> . for
    (4) statement -> . load
    (5) statement -> . save
    (6) statement -> . matrix3
    (7) statement -> . matrix4
    (8) statement -> . transform
    (9) statement -> . display
    (10) statement -> . if
    (13) for -> . FOR expression IN expression
    (11) load -> . LOAD_SRC expression FILE
    (12) save -> . SAVE_DEST expression FILE
    (14) matrix3 -> . matrix3_assign
    (16) matrix4 -> . matrix4_assign
    (18) transform -> . TRANSFORM expression expression
    (19) display -> . DISPLAY FILE
    (20) display -> . DISPLAY expression
    (22) if -> . if_assign
    (15) matrix3_assign -> . MATRIX3 IDENTIFIER EGAL MATRIX3FORM
    (17) matrix4_assign -> . MATRIX4 IDENTIFIER EGAL MATRIX4FORM
    (21) if_assign -> . IF EXTENSION expression COMPARE expression

    FOR             shift and go to state 5
    LOAD_SRC        shift and go to state 12
    SAVE_DEST       shift and go to state 16
    TRANSFORM       shift and go to state 4
    DISPLAY         shift and go to state 10
    MATRIX3         shift and go to state 14
    MATRIX4         shift and go to state 13
    IF              shift and go to state 7

    programme                      shift and go to state 36
    save                           shift and go to state 11
    if_assign                      shift and go to state 6
    transform                      shift and go to state 15
    for                            shift and go to state 3
    matrix4                        shift and go to state 17
    matrix4_assign                 shift and go to state 18
    statement                      shift and go to state 8
    matrix3                        shift and go to state 2
    load                           shift and go to state 9
    if                             shift and go to state 20
    display                        shift and go to state 19
    matrix3_assign                 shift and go to state 21

state 27

    (19) display -> DISPLAY FILE .

    ;               reduce using rule 19 (display -> DISPLAY FILE .)
    $end            reduce using rule 19 (display -> DISPLAY FILE .)


state 28

    (20) display -> DISPLAY expression .

    ;               reduce using rule 20 (display -> DISPLAY expression .)
    $end            reduce using rule 20 (display -> DISPLAY expression .)


state 29

    (11) load -> LOAD_SRC expression . FILE

    FILE            shift and go to state 37


state 30

    (17) matrix4_assign -> MATRIX4 IDENTIFIER . EGAL MATRIX4FORM

    EGAL            shift and go to state 38


state 31

    (15) matrix3_assign -> MATRIX3 IDENTIFIER . EGAL MATRIX3FORM

    EGAL            shift and go to state 39


state 32

    (12) save -> SAVE_DEST expression . FILE

    FILE            shift and go to state 40


state 33

    (18) transform -> TRANSFORM expression expression .

    ;               reduce using rule 18 (transform -> TRANSFORM expression expression .)
    $end            reduce using rule 18 (transform -> TRANSFORM expression expression .)


state 34

    (13) for -> FOR expression IN . expression
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 41

state 35

    (21) if_assign -> IF EXTENSION expression . COMPARE expression

    COMPARE         shift and go to state 42


state 36

    (2) programme -> statement ; programme .

    $end            reduce using rule 2 (programme -> statement ; programme .)


state 37

    (11) load -> LOAD_SRC expression FILE .

    ;               reduce using rule 11 (load -> LOAD_SRC expression FILE .)
    $end            reduce using rule 11 (load -> LOAD_SRC expression FILE .)


state 38

    (17) matrix4_assign -> MATRIX4 IDENTIFIER EGAL . MATRIX4FORM

    MATRIX4FORM     shift and go to state 43


state 39

    (15) matrix3_assign -> MATRIX3 IDENTIFIER EGAL . MATRIX3FORM

    MATRIX3FORM     shift and go to state 44


state 40

    (12) save -> SAVE_DEST expression FILE .

    ;               reduce using rule 12 (save -> SAVE_DEST expression FILE .)
    $end            reduce using rule 12 (save -> SAVE_DEST expression FILE .)


state 41

    (13) for -> FOR expression IN expression .

    ;               reduce using rule 13 (for -> FOR expression IN expression .)
    $end            reduce using rule 13 (for -> FOR expression IN expression .)


state 42

    (21) if_assign -> IF EXTENSION expression COMPARE . expression
    (23) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    expression                     shift and go to state 45

state 43

    (17) matrix4_assign -> MATRIX4 IDENTIFIER EGAL MATRIX4FORM .

    ;               reduce using rule 17 (matrix4_assign -> MATRIX4 IDENTIFIER EGAL MATRIX4FORM .)
    $end            reduce using rule 17 (matrix4_assign -> MATRIX4 IDENTIFIER EGAL MATRIX4FORM .)


state 44

    (15) matrix3_assign -> MATRIX3 IDENTIFIER EGAL MATRIX3FORM .

    ;               reduce using rule 15 (matrix3_assign -> MATRIX3 IDENTIFIER EGAL MATRIX3FORM .)
    $end            reduce using rule 15 (matrix3_assign -> MATRIX3 IDENTIFIER EGAL MATRIX3FORM .)


state 45

    (21) if_assign -> IF EXTENSION expression COMPARE expression .

    ;               reduce using rule 21 (if_assign -> IF EXTENSION expression COMPARE expression .)
    $end            reduce using rule 21 (if_assign -> IF EXTENSION expression COMPARE expression .)

